# Generated by Django 5.2.7 on 2025-10-20 04:07

from django.db import migrations


def seed_quiz_data(apps, schema_editor):
    Quiz = apps.get_model("lam_bai_thi_trac_nghiem_lai_xe", "Quiz")
    Question = apps.get_model("lam_bai_thi_trac_nghiem_lai_xe", "Question")
    AnswerOption = apps.get_model("lam_bai_thi_trac_nghiem_lai_xe", "AnswerOption")

    quiz, _ = Quiz.objects.get_or_create(
        title="Văn hóa Việt Nam",
        defaults={
            "description": "Làm xong câu hiện tại sẽ tự chuyển sang câu tiếp theo.",
            "badge_label": "Trắc nghiệm",
        },
    )

    questions = [
        {
            "text": "“Áo dài” – trang phục truyền thống của Việt Nam thường được mặc vào dịp nào?",
            "choices": [
                "Khi đi học",
                "Khi đi làm",
                "Trong các dịp lễ, Tết, cưới hỏi",
                "Khi chơi thể thao",
            ],
            "correct_index": 2,
        },
        {
            "text": "Trò chơi dân gian “kéo co” thể hiện điều gì trong văn hóa Việt Nam?",
            "choices": [
                "Tính hiếu thắng cá nhân",
                "Tinh thần đoàn kết, hợp tác",
                "Kỹ năng thể thao",
                "Sự cạnh tranh giữa các vùng miền",
            ],
            "correct_index": 1,
        },
        {
            "text": "Trong mâm ngũ quả ngày Tết của người miền Nam thường có trái gì?",
            "choices": [
                "Chuối, bưởi, dưa hấu",
                "Mãng cầu, dừa, đu đủ, xoài",
                "Táo, lê, cam",
                "Nho, dưa hấu, cam",
            ],
            "correct_index": 1,
        },
        {
            "text": "Lễ hội Chùa Hương được tổ chức hằng năm ở tỉnh/thành nào?",
            "choices": [
                "Bắc Ninh",
                "Hà Nam",
                "Hà Nội",
                "Ninh Bình",
            ],
            "correct_index": 2,
        },
        {
            "text": "Trong giao tiếp, người Việt thường thể hiện sự tôn trọng người lớn tuổi bằng cách nào?",
            "choices": [
                "Nói chuyện to, rõ ràng",
                "Cúi đầu hoặc chắp tay chào",
                "Nhìn thẳng vào mắt khi nói",
                "Bắt tay thật chặt",
            ],
            "correct_index": 1,
        },
    ]

    # Xóa dữ liệu cũ trước khi thêm lại để tránh trùng lặp khi chạy lại migration
    existing_questions = Question.objects.filter(quiz=quiz)
    if existing_questions.exists():
        AnswerOption.objects.filter(question__in=existing_questions).delete()
        existing_questions.delete()

    for order, item in enumerate(questions):
        question = Question.objects.create(quiz=quiz, text=item["text"], order=order)
        for choice_order, choice in enumerate(item["choices"]):
            AnswerOption.objects.create(
                question=question,
                text=choice,
                order=choice_order,
                is_correct=choice_order == item["correct_index"],
            )


def unseed_quiz_data(apps, schema_editor):
    Quiz = apps.get_model("lam_bai_thi_trac_nghiem_lai_xe", "Quiz")
    Quiz.objects.filter(title="Văn hóa Việt Nam").delete()


class Migration(migrations.Migration):

    dependencies = [
        ("lam_bai_thi_trac_nghiem_lai_xe", "0001_initial"),
    ]

    operations = [
        migrations.RunPython(seed_quiz_data, unseed_quiz_data),
    ]
